import os

from stackebrandtcurves.refseq import RefSeq
from stackebrandtcurves.ssu import SearchApplication, count_matches

DATA_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), "data")

def test_count_matches():
    s1 = "ACGTNNY-G"
    s2 = "ACGGNAA-G"
    #     ^^^ ^^ ^^
    assert count_matches(s1, s2) == 7

def test_search_seq():
    refseq = RefSeq(DATA_DIR)
    refseq.load_assemblies()
    refseq.load_seqs()
    db = SearchApplication(refseq)
    hits = db.search_seq(
        "lcl|NZ_CP015402.2_rrna_41", TEST_SEQ, min_pctid = 95.0)
    hits = list(hits)
    assert len(hits) == 11
    for hit in hits:
        print(hit.subject.accession)
    last_hit = hits[-1]
    assert last_hit.subject.accession == "GCF_016696845.1"

def test_exhaustive_search():
    refseq = RefSeq(DATA_DIR)
    refseq.load_assemblies()
    refseq.load_seqs()
    db = SearchApplication(refseq)
    hits = db.exhaustive_search(
        "lcl|NZ_CP015402.2_rrna_41", TEST_SEQ, min_pctid = 95.0)
    hits = list(hits)
    assert len(hits) == 11
    last_hit = hits[-1]
    assert last_hit.subject.accession == "GCF_016696845.1"


TEST_SEQ = (
    "ACAACGAAGAGTTTGATCCTGGCTCAGGATGAACGCTAGCGACAGGCCTAACACATGCAAGTCGAGGGGCAGCGGGGAGC"
    "GAAGCTTGCTTTGCTCCGCCGGCGACCGGCGCACGGGTGAGTAACGCGTATGCAACCTGCCCGTTTCAGCGGGATAACCC"
    "GGAGAAATCCGGCCTAATACCGCATGTGGCCGAGGGGGAGGCATCTTCTTTCGGCCAAAGGAGGCAACTCCGGAGACGGA"
    "TGGGCATGCGTGACATTAGCTTGTTGGCGGGGTAACGGCCCACCAAGGCGACGATGTCTAGGGGTTCTGAGAGGAAGGTC"
    "CCCCACACTGGTACTGAGACACGGACCAGACTCCTACGGGAGGCAGCAGTGAGGAATATTGGTCAATGGGCGAGAGCCTG"
    "AACCAGCCAAGTCGCGTGAAGGATGACGGCCCTACGGGTTGTAAACTTCTTTTGTCAGGGAGCAATTGAGTCCACGTGTG"
    "GGCTTAGCGAGAGTACCTGAAGAAAAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCGAGCGTT"
    "ATCCGGATTTATTGGGTTTAAAGGGTGCGTAGGCGGAATATCAAGTCAGCGGTAAAAATTCGGGGCTCAACCCCGTCGTG"
    "CCGTTGAAACTGATGTTCTTGAGTGGGCGAGAAGTATGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCA"
    "GAACTCCGATTGCGAAGGCAGCATACCGGCGCCCAACTGACGCTGAAGCACGAAAGCGTGGGTATCGAACAGGATTAGAT"
    "ACCCTGGTAGTCCACGCAGTAAACGATGAATGCTAATTGTCCGGAGGGATTGACCTCTGGGTGATACAGCGAAAGCGTTA"
    "AGCATTCCACCTGGGGAGTACGCCGGCAACGGTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGAGGAACATGT"
    "GGTTTAATTCGATGATACGCGAGGAACCTTACCCGGGCTCAAACGCAGGAGGAATACATTTGAAAGGGTGTAGCTCTACG"
    "GAGTCTTCTGCGAGGTGCTGCATGGTTGTCGTCAGCTCGTGCCGTGAGGTGTCGGCTTAAGTGCCATAACGAGCGCAACC"
    "CCTATCGACAGTTGCCAACAGGTTAAGCTGGGAACTCTGTCGAGACTGCCGGCGCAAGCTGAGAGGAAGGCGGGGATGAC"
    "GTCAAATCAGCACGGCCCTTACGTCCGGGGCGACACACGTGTTACAATGGCGGCCACAGCGGGAAGCCAGGCGGCGACGC"
    "CGAGCGGAACCCGAAAAGCCGTCTCAGTTCGGATTGGAGTCTGCAACCCGACTCCATGAAGCTGGATTCGCTAGTAATCG"
    "CGCATCAGCCACGGCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCAAGCCATGGGAGCCGGGAGTGCCTG"
    "AAGTACGTGACCGCAAGGAGCGTCCTAGGGTAAGACCGGTGACTGGGGCTAAGTCGTAACAAGGTAGCCGTACCGGAAGG"
    "TGCGGCTGGAACACCTCCTTT"
)
